# CI/CD Workflow 관련 설명
# 이 워크플로우는 코드를 자동으로 빌드하고,
# Docker 이미지를 생성하며, Docker Hub에 푸시한 후,
# 최종적으로 원격 서버에 배포하는 과정을 자동화합니다.
name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build, Dockerize & Deploy
    runs-on: ubuntu-latest

    steps:
      # 1. 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. JDK 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin

      # 3. Gradle 캐시
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. Gradle 실행 권한 부여
      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      # 5. Gradle 빌드 (테스트 제외)
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 6. Docker 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 7. Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        run: |
          docker build -t kimminseop1217/admin-backoffice:latest .
          docker push kimminseop1217/admin-backoffice:latest

      # 8. SSH를 통해 원격 서버에 배포 (CD)
      - name: Deploy to Server via SSH
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 기존 Docker 컨테이너 중지 및 삭제
            sudo docker stop admin-backoffice || true
            sudo docker rm admin-backoffice || true
            
            # 최신 Docker 이미지 다운로드
            sudo docker pull kimminseop1217/admin-backoffice:latest
            
            # 새 컨테이너 실행
            sudo docker run -d -p 8080:8080 --name admin-backoffice kimminseop1217/admin-backoffice:latest